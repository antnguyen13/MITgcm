(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint68k
(PID.TID 0000.0001) // Build user:        atnguyen
(PID.TID 0000.0001) // Build host:        sverdrup.ices.utexas.edu
(PID.TID 0000.0001) // Build date:        Tue Sep 27 12:48:46 CDT 2022
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > nTx=1,
(PID.TID 0000.0001) > nTy=1,
(PID.TID 0000.0001) > printMapIncludesZeros = .TRUE.
(PID.TID 0000.0001) > debugMode=.FALSE.,
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) ># Note: Some systems use & as the
(PID.TID 0000.0001) ># namelist terminator. Other systems
(PID.TID 0000.0001) ># use a / character (as shown here).
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    1 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    1 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    1 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =   20 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =   11 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    3 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    3 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =   15 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =   20 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =   11 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    1 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    1 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    T ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=   F ; /* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) useNest2W_parent =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) useNest2W_child  =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    T ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ======= Starting MPI parallel Run =========
(PID.TID 0000.0001)  My Processor Name (len: 24 ) = sverdrup.ices.utexas.edu
(PID.TID 0000.0001)  Located at (  0,  0) on processor grid (0:  0,0:  0)
(PID.TID 0000.0001)  Origin at  (     1,     1) on global grid (1:    20,1:    11)
(PID.TID 0000.0001)  North neighbor = processor 0000
(PID.TID 0000.0001)  South neighbor = processor 0000
(PID.TID 0000.0001)   East neighbor = processor 0000
(PID.TID 0000.0001)   West neighbor = processor 0000
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   1,   1:   1)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) ># | Model parameters |
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > tRef=15*0.,
(PID.TID 0000.0001) > sRef=15*34.,
(PID.TID 0000.0001) > viscAz=0.00001,
(PID.TID 0000.0001) > viscC2smag=2.2,
(PID.TID 0000.0001) > diffKzT=0.00001,
(PID.TID 0000.0001) > diffKzS=0.00001,
(PID.TID 0000.0001) > diffKhT=20.,
(PID.TID 0000.0001) > diffKhS=20.,
(PID.TID 0000.0001) ># diffKhT=0.
(PID.TID 0000.0001) ># diffKhS=0.
(PID.TID 0000.0001) > no_slip_sides=.FALSE.,
(PID.TID 0000.0001) > no_slip_bottom=.TRUE.,
(PID.TID 0000.0001) > rigidLid=.FALSE.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) > staggerTimeStep=.TRUE.,
(PID.TID 0000.0001) > tempAdvScheme=33,
(PID.TID 0000.0001) > saltAdvScheme=33,
(PID.TID 0000.0001) > eosType='JMD95Z',
(PID.TID 0000.0001) > f0=0.e-4,
(PID.TID 0000.0001) > beta=0.E-11,
(PID.TID 0000.0001) > selectAddFluid=1.,
(PID.TID 0000.0001) > useSingleCpuIO=.TRUE.,
(PID.TID 0000.0001) > gravity=9.81,
(PID.TID 0000.0001) > rhonil=1029.,
(PID.TID 0000.0001) > rhoConst=1029.,
(PID.TID 0000.0001) > rhoConstFresh=1000.,
(PID.TID 0000.0001) > exactConserv=.TRUE.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) >#set nlfs rfwf:
(PID.TID 0000.0001) > select_rStar=2,
(PID.TID 0000.0001) > nonlinFreeSurf=4,
(PID.TID 0000.0001) > useRealFreshWaterFlux=.TRUE.,
(PID.TID 0000.0001) >#set lfs virtual salt:
(PID.TID 0000.0001) ># nonlinFreeSurf=0,
(PID.TID 0000.0001) ># useRealFreshWaterFlux=.FALSE.,
(PID.TID 0000.0001) ># linFSconserveTr=.FALSE.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > debugLevel=1,
(PID.TID 0000.0001) > readBinaryPrec=64,
(PID.TID 0000.0001) > writeBinaryPrec=64,
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) ># cg2dMaxIters=300,
(PID.TID 0000.0001) ># cg2dTargetResidual=1.E-13,
(PID.TID 0000.0001) > cg3dMaxIters=20,
(PID.TID 0000.0001) > cg3dTargetResidual=1.E-8,
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) > nIter0=0,
(PID.TID 0000.0001) ># endTime=200.,
(PID.TID 0000.0001) ># endTime=10000.,
(PID.TID 0000.0001) > nTimeSteps=8,
(PID.TID 0000.0001) >#3 hrs
(PID.TID 0000.0001) ># nTimeSteps=432,
(PID.TID 0000.0001) >#14hrs
(PID.TID 0000.0001) ># nTimeSteps=2016,
(PID.TID 0000.0001) >#2 days
(PID.TID 0000.0001) ># endTime=172800.,
(PID.TID 0000.0001) ># nTimeSteps=6912.,
(PID.TID 0000.0001) >#3 days
(PID.TID 0000.0001) ># nTimeSteps=10368.,
(PID.TID 0000.0001) >#(31+30+31)*24*3600/25
(PID.TID 0000.0001) ># nTimeSteps=317952.,
(PID.TID 0000.0001) > deltaT=25.,
(PID.TID 0000.0001) > abEps=0.01,
(PID.TID 0000.0001) > pChkptFreq=0.,
(PID.TID 0000.0001) > chkptFreq=0.,
(PID.TID 0000.0001) ># dumpFreq=1000,
(PID.TID 0000.0001) > monitorSelect=1,
(PID.TID 0000.0001) ># monitorFreq=1000.,
(PID.TID 0000.0001) > monitorFreq=1.,
(PID.TID 0000.0001) >#when periodicExternalForcing is F, we read only 1 record in from
(PID.TID 0000.0001) >#iceplume_init_fixed and treat the input as constant forcing in time
(PID.TID 0000.0001) > periodicExternalForcing=.FALSE.,
(PID.TID 0000.0001) >#when periodicExternalForcing is T, we read in from external_fields_load
(PID.TID 0000.0001) >#and need accompanied variables to tell period and cycle.
(PID.TID 0000.0001) >#Potentially, we prefer iceplume to have its own period/cycle/flags so
(PID.TID 0000.0001) >#that we dont have conflict of these flags on at the same time of pkg/exf
(PID.TID 0000.0001) ># periodicExternalForcing=.TRUE.,
(PID.TID 0000.0001) ># externForcingPeriod=25.,
(PID.TID 0000.0001) ># externForcingCycle=225.,
(PID.TID 0000.0001) >#cycle: how many records before we loop back to beginning,
(PID.TID 0000.0001) >#e.g. 1 yr at monthly then at rec 13 we loop to beginning
(PID.TID 0000.0001) >#see get_periodic_rec in matlab folder for duplicates.
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingCartesianGrid=.TRUE.,
(PID.TID 0000.0001) > delXfile='delx_tiny.bin',
(PID.TID 0000.0001) > delYfile='dely_tiny.bin',
(PID.TID 0000.0001) > delZ= 15*10.,
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Input datasets
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile='bathymetry_tiny_closed.bin',
(PID.TID 0000.0001) > hydrogThetaFile='tempini_tiny.bin',
(PID.TID 0000.0001) > hydrogSaltFile ='saltini_tiny.bin',
(PID.TID 0000.0001) ># uVelInitFile = 'zeros_3d_real8.bin',
(PID.TID 0000.0001) ># vVelInitFile = 'vvel_init_1mps_ix19_iy6.bin',
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > useOBCS=.FALSE.,
(PID.TID 0000.0001) > useDiagnostics=.TRUE.,
(PID.TID 0000.0001) > useICEPLUME=.TRUE.,
(PID.TID 0000.0001) ># useEXF=.TRUE.,
(PID.TID 0000.0001) ># useCAL=.TRUE.,
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/obcs                 compiled but not used ( useOBCS                  = F )
 pkg/cal                  compiled but not used ( useCAL                   = F )
 pkg/exf                  compiled but not used ( useEXF                   = F )
 pkg/iceplume             compiled   and   used ( useICEPLUME              = T )
 pkg/diagnostics          compiled   and   used ( useDiagnostics           = T )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled but not used ( +vectorInvariantMomentum = F )
 pkg/mom_fluxform         compiled   and   used ( & not vectorInvariantMom = T )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  ICEPLUME_READPARMS: opening data.iceplume
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.iceplume
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.iceplume"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ***************
(PID.TID 0000.0001) ># ICEPLUME
(PID.TID 0000.0001) ># ***************
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># For plume:
(PID.TID 0000.0001) > &ICEPLUME_PARM01
(PID.TID 0000.0001) > runoffVelfile = 'runoffVel_tiny_1mps.bin'
(PID.TID 0000.0001) > runoffRadfile = 'runoffRad_tiny_8m3ps.bin'
(PID.TID 0000.0001) ># runoffQsgfile = 'runoffQsg_tiny_8m3ps.bin'
(PID.TID 0000.0001) >##the file below has 8 through all time, for checking with exf
(PID.TID 0000.0001) ># runoffQsgfile = 'runoffQsg_tiny_8m3ps_9rec_constant.bin'
(PID.TID 0000.0001) > plumeMaskFile = 'plumeMask_tiny.bin'
(PID.TID 0000.0001) ># plumeMaskFile = 'zeros_tiny_real8.bin'
(PID.TID 0000.0001) > usePlumeDiagnostics=.TRUE.,
(PID.TID 0000.0001) >####
(PID.TID 0000.0001) >#conserveMass: when .false. we do NOT scaled Qsg+plumemelt, so the entire volume of FW, converted to mass
(PID.TID 0000.0001) >#and added into addMass is the full amount.  This is what we desire actually, especially for the case with
(PID.TID 0000.0001) >#nlfs+rfwf where the ocean dz is allowed to change.  In general this flag convention of true/false is very
(PID.TID 0000.0001) >#deceiving, in that when .true. we actually do NOT conserve mass but rather remove mass artificially.
(PID.TID 0000.0001) >#Should consider reversing the meaning..
(PID.TID 0000.0001) > conserveMass = .FALSE.,
(PID.TID 0000.0001) > T_sg = 0.001,
(PID.TID 0000.0001) > S_sg = 0.001,
(PID.TID 0000.0001) >## w_sg = 1.0,
(PID.TID 0000.0001) > iceTemp=-10.,
(PID.TID 0000.0001) > backgroundVel=0.017,
(PID.TID 0000.0001) ># rhoShelfice = 917.,
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &ICEPLUME_PARM02
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &ICEPLUME_PARM03
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  ICEPLUME_READPARMS: finished reading data.iceplume
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: opening data.diagnostics
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.diagnostics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.diagnostics"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Diagnostic Package Choices
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># 2-D fields:
(PID.TID 0000.0001) ># =================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># ETAN     Perturbation of Surface (pressure, height) (Pa,m)
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># monthly 3-D fields:
(PID.TID 0000.0001) ># ===================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># SALTanom Salt anomaly (=SALT-35; g/kg)
(PID.TID 0000.0001) ># THETA    Potential Temperature (degC,K)
(PID.TID 0000.0001) ># UVELMASS Zonal Mass-Weighted Comp of Velocity (m/s)
(PID.TID 0000.0001) ># VVELMASS Meridional Mass-Weighted Comp of Velocity (m/s)
(PID.TID 0000.0001) ># WVELMASS Vertical Mass-Weighted Comp of Velocity (m/s)
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > &diagnostics_list
(PID.TID 0000.0001) >   frequency(8) = 25.,
(PID.TID 0000.0001) >    fields(1:6,8) = 'icefrntW','icefrntT','icefrntS',
(PID.TID 0000.0001) >                    'icefrntR','icefrntM','icefrntA',
(PID.TID 0000.0001) >    filename(8) = 'diags/icefrnt_3d_set1',
(PID.TID 0000.0001) >   fileFlags(8) = 'D       ',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) >  frequency(1) = 25.0,
(PID.TID 0000.0001) >   fields(1:9,1) = 'ETAN    ','DETADT2 ','PHIBOT  ',
(PID.TID 0000.0001) >                   'MXLDEPTH','oceQnet ','oceFWflx',
(PID.TID 0000.0001) >                   'oceTAUX ','oceTAUY ','ETANSQ  ',
(PID.TID 0000.0001) >   filename(1) = 'diags/state_2d_set1',
(PID.TID 0000.0001) >   fileFlags(1) = 'D       ',
(PID.TID 0000.0001) >###---
(PID.TID 0000.0001) >  frequency(2) = 25.0,
(PID.TID 0000.0001) >   fields(1:2,2) = 'THETA   ','SALT    ',
(PID.TID 0000.0001) >#                   'tAddMass','sAddMass',
(PID.TID 0000.0001) >#                   'DRHODR  ','RHOAnoma',
(PID.TID 0000.0001) >   filename(2) = 'diags/state_3d_set1',
(PID.TID 0000.0001) >   fileFlags(2) = 'D       ',
(PID.TID 0000.0001) >##---
(PID.TID 0000.0001) >  frequency(3) = 25.0,
(PID.TID 0000.0001) >   fields(1:3,3) = 'UVELMASS','VVELMASS','WVELMASS',
(PID.TID 0000.0001) >   filename(3) = 'diags/trsp_3d_set1',
(PID.TID 0000.0001) >   fileFlags(3) = 'D       ',
(PID.TID 0000.0001) >###---
(PID.TID 0000.0001) >##set below only works if we turn on pkg/exf
(PID.TID 0000.0001) >#  frequency(4) = 25.0,
(PID.TID 0000.0001) >#   fields(1:18,4) ='EXFpreci','EXFevap ','EXFroff ','EXFempmr',
(PID.TID 0000.0001) >#                   'EXFswdn ','EXFlwdn ','EXFswnet','EXFlwnet','EXFqnet ',
(PID.TID 0000.0001) >#                   'EXFatemp','EXFaqh  ','EXFtaux ','EXFtauy ',
(PID.TID 0000.0001) >#                   'EXFuwind','EXFvwind','EXFpress','EXFhs   ','EXFhl   ',
(PID.TID 0000.0001) >#   filename(4) = 'diags/exf_zflux_set1',
(PID.TID 0000.0001) >##                 'EXFroft ',
(PID.TID 0000.0001) >###---
(PID.TID 0000.0001) >  frequency(5) = -25.0,
(PID.TID 0000.0001) >   fields(1:2,5) = 'ETAN    ',
(PID.TID 0000.0001) >                   'PHIBOT  ',
(PID.TID 0000.0001) >   filename(5) = 'diags/budg2d_snap_set1',
(PID.TID 0000.0001) >   timePhase(5)= 0.,
(PID.TID 0000.0001) >   fileFlags(5) = 'D       ',
(PID.TID 0000.0001) >#'SIheff  ','SIhsnow ','SIarea  ','sIceLoad',
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >  frequency(9) = -25.0,
(PID.TID 0000.0001) >   fields(1:2,9) = 'THETA   ','SALT    ',
(PID.TID 0000.0001) >#                   'tAddMass','sAddMass',
(PID.TID 0000.0001) >   filename(9) = 'diags/budg3d_snap_set3',
(PID.TID 0000.0001) >   timePhase(9)= 0.,
(PID.TID 0000.0001) >   fileFlags(9) = 'D       ',
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >  frequency(7) = 25.0,
(PID.TID 0000.0001) >   fields(1:4,7) = 'oceFWflx','TFLUX   ',
(PID.TID 0000.0001) >                   'SFLUX   ','oceQsw  ',
(PID.TID 0000.0001) >   filename(7) = 'diags/budg2d_zflux_set1',
(PID.TID 0000.0001) >   fileFlags(7) = 'D       ',
(PID.TID 0000.0001) >#                  'SPforcT1','SPforcS1',
(PID.TID 0000.0001) >#                  'SIatmFW ','SItflux ','oceSPflx',
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >###thse fields have "r" for vert int so just mult with drF
(PID.TID 0000.0001) >  frequency(14) = 25.0,
(PID.TID 0000.0001) >   fields(1:12,14) ='UVELMASS','VVELMASS',
(PID.TID 0000.0001) >                    'ADVx_TH ','ADVy_TH ','DFxE_TH ','DFyE_TH ',
(PID.TID 0000.0001) >                    'ADVx_SLT','ADVy_SLT','DFxE_SLT','DFyE_SLT',
(PID.TID 0000.0001) >                    'AB_gT   ','AB_gS   ',
(PID.TID 0000.0001) >   filename(14) = 'diags/budg3d_hflux_set2',
(PID.TID 0000.0001) >   fileFlags(14) = 'D       ',
(PID.TID 0000.0001) >#the following are not transports but tendencies
(PID.TID 0000.0001) >#                 'oceSPtnd','oceEPtnd',
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >#  frequency(17) = 25.0,
(PID.TID 0000.0001) >#   fields(1:7,17) ='addMass ','IPmasspl','IPmassbg',
(PID.TID 0000.0001) >#                   'IP_gTplm','IP_gTbg ',
(PID.TID 0000.0001) >#                   'IP_gSplm','IP_gSbg ',
(PID.TID 0000.0001) >#   filename(17) = 'diags/budg3d_hflux_set3',
(PID.TID 0000.0001) >#   fileFlags(17) = 'D       ',
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >#  frequency(18) = 25.0,
(PID.TID 0000.0001) >#   fields(1:2,18) ='gTaddMas','gSaddMas',
(PID.TID 0000.0001) >#   filename(18) = 'diags/budg3d_tend',
(PID.TID 0000.0001) >#   fileFlags(18) = 'D       ',
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >#  frequency(7) = 25.0,
(PID.TID 0000.0001) >#   fields(1:4,7) ='ADVxHEFF','ADVyHEFF',
(PID.TID 0000.0001) >#                  'ADVxSNOW','ADVySNOW',
(PID.TID 0000.0001) >#   filename(7) = 'diags/budg2d_hflux_set1',
(PID.TID 0000.0001) >#   fileFlags(7) = 'D       ',
(PID.TID 0000.0001) >##                ,'DFxEHEFF','DFyEHEFF'
(PID.TID 0000.0001) >##                ,'DFxESNOW','DFyESNOW'
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) >## this one is important because it activates the vertical advection diags
(PID.TID 0000.0001) >  frequency(15) = 25.0,
(PID.TID 0000.0001) >   fields(1:6,15) ='SRELAX  ','TRELAX  ','WTHMASS ','WSLTMASS',
(PID.TID 0000.0001) >                   'oceSflux','oceQnet ',
(PID.TID 0000.0001) >   filename(15) = 'diags/budg2d_zflux_set2',
(PID.TID 0000.0001) >   fileFlags(15) = 'D       ',
(PID.TID 0000.0001) >#                   'SIatmQnt','SIaaflux','SIsnPrcp','SIacSubl',
(PID.TID 0000.0001) >#'SIempmr ', SIempmr is identical to minus oceFWflx
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >  frequency(16) = 25.0,
(PID.TID 0000.0001) >   fields(1:9,16) ='WVELMASS',
(PID.TID 0000.0001) >                   'ADVr_TH ','DFrE_TH ','DFrI_TH ',
(PID.TID 0000.0001) >                   'ADVr_SLT','DFrE_SLT','DFrI_SLT',
(PID.TID 0000.0001) >                   'WTHMASS ','WSLTMASS',
(PID.TID 0000.0001) >   filename(16) = 'diags/budg3d_zflux_set2',
(PID.TID 0000.0001) >   fileFlags(16) = 'D       ',
(PID.TID 0000.0001) >#WTHMASS,WSLTMASS  only needed for the 1st layer, not 3d
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >#  frequency(21) = 25.0,
(PID.TID 0000.0001) >#   fields(1:2,21) ='KPPg_TH ','KPPg_SLT',
(PID.TID 0000.0001) >##                   'oceSPtnd','oceEPtnd',
(PID.TID 0000.0001) >#   filename(21) = 'diags/budg3d_kpptend_set1',
(PID.TID 0000.0001) >#   fileFlags(21) = 'D       ',
(PID.TID 0000.0001) >#####note: TOT[T,S]TEND are useless unless mult also with hFacC prior to output
(PID.TID 0000.0001) >#####note: for what i run, AB_g[T,S] are all zeros, so saving space and not diag
(PID.TID 0000.0001) >#####                   'TOTTTEND','TOTSTEND','AB_gT   ','AB_gS   ',
(PID.TID 0000.0001) >#####---
(PID.TID 0000.0001) >###some fields not kpp nor tend, but need for integrated:
(PID.TID 0000.0001) >#  frequency(17) = 25.0,
(PID.TID 0000.0001) >#   fields(1:7,17) =
(PID.TID 0000.0001) >#                    'WVELMASS','ADVr_TH ','DFrE_TH ','DFrI_TH ',
(PID.TID 0000.0001) >#                    'ADVr_SLT','DFrE_SLT','DFrI_SLT',
(PID.TID 0000.0001) >##                    'KPPg_TH ','KPPg_SLT','oceSPtnd',
(PID.TID 0000.0001) >##                    'oceEPtnd',
(PID.TID 0000.0001) >#   filename(17) = 'diags/budg2d_kpptend_set1',
(PID.TID 0000.0001) >#   fileFlags(17) = 'DI      ',
(PID.TID 0000.0001) >###---
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) ># Parameter for Diagnostics of per level statistics:
(PID.TID 0000.0001) >#-----------------
(PID.TID 0000.0001) ># for each output-stream:
(PID.TID 0000.0001) >#  stat_fname(n) : prefix of the output file name (only 8.c long) for
(PID.TID 0000.0001) >#outp.stream n
(PID.TID 0000.0001) >#  stat_freq(n):< 0 : write snap-shot output every |stat_freq| seconds
(PID.TID 0000.0001) >#               > 0 : write time-average output every stat_freq seconds
(PID.TID 0000.0001) >#  stat_phase(n)    : write at time = stat_phase + multiple of |stat_freq|
(PID.TID 0000.0001) >#  stat_region(:,n) : list of "regions" (default: 1 region only=global)
(PID.TID 0000.0001) >#  stat_fields(:,n) : list of diagnostics fields (8.c) (see
(PID.TID 0000.0001) >#"available_diagnostics.log"
(PID.TID 0000.0001) >#                 file for the list of all available diag. in this particular
(PID.TID 0000.0001) >#config)
(PID.TID 0000.0001) >#-----------------
(PID.TID 0000.0001) > &DIAG_STATIS_PARMS
(PID.TID 0000.0001) >#- an example just to check the agreement with MONITOR output:
(PID.TID 0000.0001) >#stat_fields(1,1)= 'ETAN    ','UVEL    ','VVEL    ','WVEL    ', 'THETA   ',
(PID.TID 0000.0001) >#   stat_fname(1)= 'dynStDiag',
(PID.TID 0000.0001) >#    stat_freq(1)= -864000.,
(PID.TID 0000.0001) >#   stat_phase(1)= 0.,
(PID.TID 0000.0001) > &
(PID.TID 0000.0001) 
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": OK
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": OK
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: global parameter summary:
(PID.TID 0000.0001)  dumpAtLast = /* always write time-ave diags at the end */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diag_mnc =   /* write NetCDF output files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useMissingValue = /* put MissingValue where mask = 0 */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_maxIters = /* max number of iters in diag_cg2d */
(PID.TID 0000.0001)                     150
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_resTarget = /* residual target for diag_cg2d */
(PID.TID 0000.0001)                 1.000000000000000E-07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_pcOffDFac = /* preconditioner off-diagonal factor */
(PID.TID 0000.0001)                 9.611687812379854E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: active diagnostics summary:
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) Creating Output Stream: diags/state_2d_set1
(PID.TID 0000.0001) Output Frequency:         25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:         25.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    ETAN     DETADT2  PHIBOT   MXLDEPTH oceQnet  oceFWflx oceTAUX  oceTAUY  ETANSQ
(PID.TID 0000.0001) Creating Output Stream: diags/state_3d_set1
(PID.TID 0000.0001) Output Frequency:         25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:         25.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    THETA    SALT
(PID.TID 0000.0001) Creating Output Stream: diags/trsp_3d_set1
(PID.TID 0000.0001) Output Frequency:         25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:         25.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    UVELMASS VVELMASS WVELMASS
(PID.TID 0000.0001) Creating Output Stream: diags/budg2d_snap_set1
(PID.TID 0000.0001) Output Frequency:        -25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:          0.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    ETAN     PHIBOT
(PID.TID 0000.0001) Creating Output Stream: diags/budg2d_zflux_set1
(PID.TID 0000.0001) Output Frequency:         25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:         25.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    oceFWflx TFLUX    SFLUX    oceQsw
(PID.TID 0000.0001) Creating Output Stream: diags/icefrnt_3d_set1
(PID.TID 0000.0001) Output Frequency:         25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:         25.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    icefrntW icefrntT icefrntS icefrntR icefrntM icefrntA
(PID.TID 0000.0001) Creating Output Stream: diags/budg3d_snap_set3
(PID.TID 0000.0001) Output Frequency:        -25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:          0.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    THETA    SALT
(PID.TID 0000.0001) Creating Output Stream: diags/budg3d_hflux_set2
(PID.TID 0000.0001) Output Frequency:         25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:         25.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    UVELMASS VVELMASS ADVx_TH  ADVy_TH  DFxE_TH  DFyE_TH  ADVx_SLT ADVy_SLT DFxE_SLT DFyE_SLT
(PID.TID 0000.0001)  Fields:    AB_gT    AB_gS
(PID.TID 0000.0001) Creating Output Stream: diags/budg2d_zflux_set2
(PID.TID 0000.0001) Output Frequency:         25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:         25.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    SRELAX   TRELAX   WTHMASS  WSLTMASS oceSflux oceQnet
(PID.TID 0000.0001) Creating Output Stream: diags/budg3d_zflux_set2
(PID.TID 0000.0001) Output Frequency:         25.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:         25.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02 ; F-Flags="D       "
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    WVELMASS ADVr_TH  DFrE_TH  DFrI_TH  ADVr_SLT DFrE_SLT DFrI_SLT WTHMASS  WSLTMASS
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: statistics diags. summary:
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SET_PARMS: done
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delX loaded from file: delx_tiny.bin
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delY loaded from file: dely_tiny.bin
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) %MON XC_max                       =   3.9000000000000E+03
(PID.TID 0000.0001) %MON XC_min                       =   1.0000000000000E+02
(PID.TID 0000.0001) %MON XC_mean                      =   2.0000000000000E+03
(PID.TID 0000.0001) %MON XC_sd                        =   1.1532562594671E+03
(PID.TID 0000.0001) %MON XG_max                       =   3.8000000000000E+03
(PID.TID 0000.0001) %MON XG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON XG_mean                      =   1.9000000000000E+03
(PID.TID 0000.0001) %MON XG_sd                        =   1.1532562594671E+03
(PID.TID 0000.0001) %MON DXC_max                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXC_min                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXC_mean                     =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXC_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXF_max                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXF_min                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXF_mean                     =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXF_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXG_max                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXG_min                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXG_mean                     =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXG_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXV_max                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXV_min                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXV_mean                     =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DXV_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YC_max                       =   2.1000000000000E+03
(PID.TID 0000.0001) %MON YC_min                       =   1.0000000000000E+02
(PID.TID 0000.0001) %MON YC_mean                      =   1.1000000000000E+03
(PID.TID 0000.0001) %MON YC_sd                        =   6.3245553203368E+02
(PID.TID 0000.0001) %MON YG_max                       =   2.0000000000000E+03
(PID.TID 0000.0001) %MON YG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_mean                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON YG_sd                        =   6.3245553203368E+02
(PID.TID 0000.0001) %MON DYC_max                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYC_min                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYC_mean                     =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYC_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYF_max                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYF_min                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYF_mean                     =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYF_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYG_max                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYG_min                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYG_mean                     =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYG_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYU_max                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYU_min                      =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYU_mean                     =   2.0000000000000E+02
(PID.TID 0000.0001) %MON DYU_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RA_max                       =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RA_min                       =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RA_mean                      =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RA_sd                        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAW_max                      =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAW_min                      =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAW_mean                     =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAW_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAS_max                      =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAS_min                      =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAS_mean                     =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAS_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAZ_max                      =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAZ_min                      =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAZ_mean                     =   4.0000000000000E+04
(PID.TID 0000.0001) %MON RAZ_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_max                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_min                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_mean                 =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_max                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_min                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_mean                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  2  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                      33
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      33
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                      33
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      33
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001)  ICEPLUME_INIT_FIXED: Reading initial data:1749054944  0.000000000000E+00
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGNOSTICS_SET_LEVELS: done
(PID.TID 0000.0001)  Total Nb of available Diagnostics: ndiagt=   204
(PID.TID 0000.0001)  write list of available Diagnostics to file: available_diagnostics.log
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    23 ETAN
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    25 DETADT2
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    73 PHIBOT
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    78 MXLDEPTH
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    87 oceQnet
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    85 oceFWflx
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    81 oceTAUX
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    82 oceTAUY
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    24 ETANSQ
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    26 THETA
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    27 SALT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    45 UVELMASS
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    46 VVELMASS
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    47 WVELMASS
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    23 ETAN
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    73 PHIBOT
(PID.TID 0000.0001) - NOTE - SETDIAG:  Diagnostic  #    85 oceFWflx is already set
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    94 TFLUX
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    95 SFLUX
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    88 oceQsw
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   199 icefrntW
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   200 icefrntT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   201 icefrntS
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   202 icefrntR
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   203 icefrntM
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   204 icefrntA
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    26 THETA
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    27 SALT
(PID.TID 0000.0001) - NOTE - SETDIAG:  Diagnostic  #    45 UVELMASS is already set
(PID.TID 0000.0001) - NOTE - SETDIAG:  Diagnostic  #    46 VVELMASS is already set
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   116 ADVx_TH
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   117 ADVy_TH
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   119 DFxE_TH
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   120 DFyE_TH
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   123 ADVx_SLT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   124 ADVy_SLT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   126 DFxE_SLT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   127 DFyE_SLT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   108 AB_gT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   109 AB_gS
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    91 SRELAX
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    90 TRELAX
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    52 WTHMASS
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #    55 WSLTMASS
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    86 oceSflux
(PID.TID 0000.0001) - NOTE - SETDIAG:  Diagnostic  #    87 oceQnet  is already set
(PID.TID 0000.0001) - NOTE - SETDIAG:  Diagnostic  #    47 WVELMASS is already set
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   115 ADVr_TH
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   118 DFrE_TH
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   121 DFrI_TH
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   122 ADVr_SLT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   125 DFrE_SLT
(PID.TID 0000.0001) SETDIAG: Allocate 15 x  1 Levels for Diagnostic #   128 DFrI_SLT
(PID.TID 0000.0001) - NOTE - SETDIAG:  Diagnostic  #    52 WTHMASS  is already set
(PID.TID 0000.0001) - NOTE - SETDIAG:  Diagnostic  #    55 WSLTMASS is already set
(PID.TID 0000.0001)   space allocated for all diagnostics:     482 levels
(PID.TID 0000.0001)   set mate pointer for diag #    81  oceTAUX  , Parms: UU      U1 , mate:    82
(PID.TID 0000.0001)   set mate pointer for diag #    82  oceTAUY  , Parms: VV      U1 , mate:    81
(PID.TID 0000.0001)   set mate pointer for diag #    45  UVELMASS , Parms: UUr     MR , mate:    46
(PID.TID 0000.0001)   set mate pointer for diag #    46  VVELMASS , Parms: VVr     MR , mate:    45
(PID.TID 0000.0001)   set mate pointer for diag #    45  UVELMASS , Parms: UUr     MR , mate:    46
(PID.TID 0000.0001)   set mate pointer for diag #    46  VVELMASS , Parms: VVr     MR , mate:    45
(PID.TID 0000.0001)   set mate pointer for diag #   116  ADVx_TH  , Parms: UU      MR , mate:   117
(PID.TID 0000.0001)   set mate pointer for diag #   117  ADVy_TH  , Parms: VV      MR , mate:   116
(PID.TID 0000.0001)   set mate pointer for diag #   119  DFxE_TH  , Parms: UU      MR , mate:   120
(PID.TID 0000.0001)   set mate pointer for diag #   120  DFyE_TH  , Parms: VV      MR , mate:   119
(PID.TID 0000.0001)   set mate pointer for diag #   123  ADVx_SLT , Parms: UU      MR , mate:   124
(PID.TID 0000.0001)   set mate pointer for diag #   124  ADVy_SLT , Parms: VV      MR , mate:   123
(PID.TID 0000.0001)   set mate pointer for diag #   126  DFxE_SLT , Parms: UU      MR , mate:   127
(PID.TID 0000.0001)   set mate pointer for diag #   127  DFyE_SLT , Parms: VV      MR , mate:   126
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/state_2d_set1
(PID.TID 0000.0001)  Levels:       1.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/state_3d_set1
(PID.TID 0000.0001)  Levels:       1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.  15.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/trsp_3d_set1
(PID.TID 0000.0001)  Levels:       1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.  15.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/budg2d_snap_set1
(PID.TID 0000.0001)  Levels:       1.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/budg2d_zflux_set1
(PID.TID 0000.0001)  Levels:       1.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/icefrnt_3d_set1
(PID.TID 0000.0001)  Levels:       1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.  15.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/budg3d_snap_set3
(PID.TID 0000.0001)  Levels:       1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.  15.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/budg3d_hflux_set2
(PID.TID 0000.0001)  Levels:       1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.  15.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/budg2d_zflux_set2
(PID.TID 0000.0001)  Levels:       1.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: diags/budg3d_zflux_set2
(PID.TID 0000.0001)  Levels:       1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.  15.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: done
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGSTATS_SET_REGIONS: define no region
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001)   space allocated for all stats-diags:       0 levels
(PID.TID 0000.0001) DIAGSTATS_SET_POINTERS: done
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) %MON fCori_max                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCori_min                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCori_mean                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCori_sd                     =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_mean                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_sd                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_max                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_min                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_mean                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   0.0000000000000E+00
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  6.6666666666666671E-03
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)    15 @  0.000000000000000E+00              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( g/kg ) */
(PID.TID 0000.0001)    15 @  3.400000000000000E+01              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAhMax = /* Maximum lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+21
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAhGrid = /* Grid dependent lateral harmonic viscosity ( non-dim. ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useFullLeith = /* Use Full Form of Leith Viscosity on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAreaViscLength = /* Use area for visc length instead of geom. mean*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2leith = /* Leith harmonic visc. factor (on grad(vort),non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2leithD = /* Leith harmonic viscosity factor (on grad(div),non-dim.)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2LeithQG = /* QG Leith harmonic viscosity factor (non-dim.)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2smag = /* Smagorinsky harmonic viscosity factor (non-dim.) */
(PID.TID 0000.0001)                 2.200000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4Max = /* Maximum biharmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+21
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4Grid = /* Grid dependent biharmonic viscosity ( non-dim. ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC4leith = /* Leith biharm viscosity factor (on grad(vort), non-dim.)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC4leithD = /* Leith biharm viscosity factor (on grad(div), non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC4Smag = /* Smagorinsky biharm viscosity factor (non-dim) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)    15 @  1.000000000000000E-05              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0000.0001)                      -1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 2.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 2.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)    15 @  1.000000000000000E-05              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)    15 @  1.000000000000000E-05              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'JMD95Z'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosRefP0 = /* Reference atmospheric pressure for EOS ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) surf_pRef = /* Surface reference pressure ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.994000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.029000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)    15 @  1.000000000000000E+00              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+00              /* K =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0000.0001)    15 @  1.000000000000000E+00              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+00              /* K =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.616400000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.292123516990375E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sIceLoadFac =  /* scale factor for sIceLoad (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       4
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriScheme= /* Scheme selector for Coriolis-Term */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : original discretization (simple averaging, no hFac)
(PID.TID 0000.0001)    = 1 : Wet-point averaging (Jamar & Ozer 1986)
(PID.TID 0000.0001)    = 2 : energy conserving scheme (no hFac weight)
(PID.TID 0000.0001)    = 3 : energy conserving scheme using Wet-point averaging
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momTidalForcing = /* Momentum Tidal forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0000.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0000.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                     150
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dMinItersNSA =   /* Minimum number of iterations of 2d con. grad solver  */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNSACGSolver =  /* use not-self-adjoint CG solver */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 2.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 2.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)    15 @  2.500000000000000E+01              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 2.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                       8
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                       8
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 6.600000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interViscAr_pCell = /* account for partial-cell in interior vert. viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interDiffKr_pCell = /* account for partial-cell in interior vert. diffusion */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pCellMix_select = /* option to enhance mixing near surface & bottom */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 9.718172983479105E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 1.029000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 5.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)    14 @  1.000000000000000E+01,             /* K =  2: 15 */
(PID.TID 0000.0001)                 5.000000000000000E+00       /* K = 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)    15 @  1.000000000000000E+01              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =  1 */
(PID.TID 0000.0001)                 3.000000000000000E+02,      /* I =  2 */
(PID.TID 0000.0001)                 5.000000000000000E+02,      /* I =  3 */
(PID.TID 0000.0001)                 7.000000000000000E+02,      /* I =  4 */
(PID.TID 0000.0001)                 9.000000000000000E+02,      /* I =  5 */
(PID.TID 0000.0001)                 1.100000000000000E+03,      /* I =  6 */
(PID.TID 0000.0001)                 1.300000000000000E+03,      /* I =  7 */
(PID.TID 0000.0001)                 1.500000000000000E+03,      /* I =  8 */
(PID.TID 0000.0001)                 1.700000000000000E+03,      /* I =  9 */
(PID.TID 0000.0001)                 1.900000000000000E+03,      /* I = 10 */
(PID.TID 0000.0001)                 2.100000000000000E+03,      /* I = 11 */
(PID.TID 0000.0001)                 2.300000000000000E+03,      /* I = 12 */
(PID.TID 0000.0001)                 2.500000000000000E+03,      /* I = 13 */
(PID.TID 0000.0001)                 2.700000000000000E+03,      /* I = 14 */
(PID.TID 0000.0001)                 2.900000000000000E+03,      /* I = 15 */
(PID.TID 0000.0001)                 3.100000000000000E+03,      /* I = 16 */
(PID.TID 0000.0001)                 3.300000000000000E+03,      /* I = 17 */
(PID.TID 0000.0001)                 3.500000000000000E+03,      /* I = 18 */
(PID.TID 0000.0001)                 3.700000000000000E+03,      /* I = 19 */
(PID.TID 0000.0001)                 3.900000000000000E+03       /* I = 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* J =  1 */
(PID.TID 0000.0001)                 3.000000000000000E+02,      /* J =  2 */
(PID.TID 0000.0001)                 5.000000000000000E+02,      /* J =  3 */
(PID.TID 0000.0001)                 7.000000000000000E+02,      /* J =  4 */
(PID.TID 0000.0001)                 9.000000000000000E+02,      /* J =  5 */
(PID.TID 0000.0001)                 1.100000000000000E+03,      /* J =  6 */
(PID.TID 0000.0001)                 1.300000000000000E+03,      /* J =  7 */
(PID.TID 0000.0001)                 1.500000000000000E+03,      /* J =  8 */
(PID.TID 0000.0001)                 1.700000000000000E+03,      /* J =  9 */
(PID.TID 0000.0001)                 1.900000000000000E+03,      /* J = 10 */
(PID.TID 0000.0001)                 2.100000000000000E+03       /* J = 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -5.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -1.500000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -2.500000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -3.500000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -4.500000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                -5.500000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                -6.500000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                -7.500000000000000E+01,      /* K =  8 */
(PID.TID 0000.0001)                -8.500000000000000E+01,      /* K =  9 */
(PID.TID 0000.0001)                -9.500000000000000E+01,      /* K = 10 */
(PID.TID 0000.0001)                -1.050000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -1.150000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -1.250000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -1.350000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -1.450000000000000E+02       /* K = 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -1.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -2.000000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -3.000000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -4.000000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                -5.000000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                -6.000000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                -7.000000000000000E+01,      /* K =  8 */
(PID.TID 0000.0001)                -8.000000000000000E+01,      /* K =  9 */
(PID.TID 0000.0001)                -9.000000000000000E+01,      /* K = 10 */
(PID.TID 0000.0001)                -1.000000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -1.100000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -1.200000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -1.300000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -1.400000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                -1.500000000000000E+02       /* K = 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)    15 @  1.000000000000000E+00              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+00              /* K =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0000.0001)    16 @  1.000000000000000E+00              /* K =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0000.0001)    16 @  1.000000000000000E+00              /* K =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)    15 @  0.000000000000000E+00              /* K =  1: 15 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    20 @  2.000000000000000E+02              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    11 @  2.000000000000000E+02              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    20 @  4.000000000000000E+04              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    11 @  4.000000000000000E+04              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    20 @  4.000000000000000E+04              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    11 @  4.000000000000000E+04              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    20 @  4.000000000000000E+04              /* I =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    11 @  4.000000000000000E+04              /* J =  1: 11 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 6.480000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ICEPLUME_CHECK: #define ALLOW_ICEPLUME
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     0
(PID.TID 0000.0001) %MON time_secondsf                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.7000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5357142857143E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7577160493828E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8662976507596E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483333333333E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397222222222E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032222222222E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6576818319614E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_max                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_mean                      =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200000000000E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: zeroPsNH=    F , zeroMeanPnh=    F
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: oldFreeSurfTerm =    F
 cg2d: Sum(rhs),rhsMax =  -1.00000000000000E+00  2.07321023647554E-03
(PID.TID 0000.0001)      cg2d_init_res =   1.00000000000000E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      31
(PID.TID 0000.0001)      cg2d_last_res =   8.70004436590834E-08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     1
(PID.TID 0000.0001) %MON time_secondsf                =   2.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.8953268582664E-04
(PID.TID 0000.0001) %MON dynstat_eta_min              =   5.3425597056877E-06
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   2.9994361060120E-05
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   2.9891158266570E-05
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   9.3680374472100E-07
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   9.0804876178473E-05
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   2.8468648566376E-07
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   6.9426188372941E-06
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   9.6896709335299E-06
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   2.3297726185589E-07
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   7.9118996735106E-05
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -7.9118996735106E-05
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   4.8916875819100E-22
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.1634722539069E-05
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   5.3008848781315E-07
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.5915127955948E-05
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.7394866508599E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7671787570579E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   2.9999474287384E-04
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.5858061685656E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.6999996851854E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5355003765690E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7577069530574E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8662238639490E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   1.9688741613750E-05
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483333250000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397222948182E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032215806627E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6576991158112E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   9.3479455023883E-06
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.1350609522309E-05
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   9.8898745918883E-06
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.9348716627150E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.9348716627150E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   5.8635777340049E-11
(PID.TID 0000.0001) %MON ke_max                       =   5.1912892066318E-09
(PID.TID 0000.0001) %MON ke_mean                      =   1.2726091227829E-10
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200000000000E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.47439768966538E+00  2.81228090766479E-03
(PID.TID 0000.0001)      cg2d_init_res =   5.63929739458456E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      31
(PID.TID 0000.0001)      cg2d_last_res =   3.76736086670328E-08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     2
(PID.TID 0000.0001) %MON time_secondsf                =   5.0000000000000E+01
(PID.TID 0000.0001) %MON dynstat_eta_max              =   2.0625402839423E-04
(PID.TID 0000.0001) %MON dynstat_eta_min              =   2.5144656662701E-05
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   5.9988722120241E-05
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   3.1323366872481E-05
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   1.4720600866111E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.0694545559226E-04
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   1.0552336073149E-06
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   1.3141141345116E-05
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.1960230518678E-05
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   3.2550083570632E-07
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   1.9139380874825E-04
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -1.9139380874825E-04
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =  -1.5666777814376E-22
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.3713341439962E-05
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   6.8393184118775E-07
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   5.9026829497869E-05
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.6951756101701E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7671465522449E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   2.9777351105681E-04
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.5685432136947E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.6999993703690E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5352895802850E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7576979616342E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8661519371300E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   3.7949683758596E-05
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483333166667E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397223690056E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032209391914E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6577164283034E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   1.8038643620772E-05
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   2.5868181949033E-05
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   2.3924226093531E-05
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.9237939025425E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.9237914717334E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   1.4975943312256E-10
(PID.TID 0000.0001) %MON ke_max                       =   2.9022393829214E-08
(PID.TID 0000.0001) %MON ke_mean                      =   2.3267821567042E-10
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200019436346E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.19099192030685E+00  5.22222745879262E-03
(PID.TID 0000.0001)      cg2d_init_res =   5.43125915703757E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      30
(PID.TID 0000.0001)      cg2d_last_res =   3.17614264417014E-08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     3
(PID.TID 0000.0001) %MON time_secondsf                =   7.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_eta_max              =   2.8831104748879E-04
(PID.TID 0000.0001) %MON dynstat_eta_min              =   6.2073682506871E-05
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   8.9983083180362E-05
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   2.4836401529564E-05
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.8242687214439E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   4.2050630874981E-04
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.1496653898784E-06
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   1.6959880761990E-05
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.6389374045638E-05
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   7.0086615742305E-07
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   4.0421909036645E-04
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -4.0421909036645E-04
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   2.5469056431079E-22
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.1279966471215E-05
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3580082549479E-06
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.2318172523937E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.6096279876484E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7671368309012E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   2.9348959777798E-04
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.5353848829039E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.6999990555484E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5350818520401E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7576890528963E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8660815826077E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   5.4863257066571E-05
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483333083334E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397224441742E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032202975084E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6577336794476E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   2.6046985792347E-05
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   5.2563288593726E-05
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   5.0527386295806E-05
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.9024069969121E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.9024043810550E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   2.8494121470126E-10
(PID.TID 0000.0001) %MON ke_max                       =   1.2590288656063E-07
(PID.TID 0000.0001) %MON ke_mean                      =   4.6393407935898E-10
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200038872692E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.09520830369160E+00  7.57193030581457E-03
(PID.TID 0000.0001)      cg2d_init_res =   3.49447387214791E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      30
(PID.TID 0000.0001)      cg2d_last_res =   2.89911489761073E-08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     4
(PID.TID 0000.0001) %MON time_secondsf                =   1.0000000000000E+02
(PID.TID 0000.0001) %MON dynstat_eta_max              =   3.7979877794397E-04
(PID.TID 0000.0001) %MON dynstat_eta_min              =   1.0844543634483E-04
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   1.1997744424048E-04
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   2.1363447671614E-05
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   4.0847763488813E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   7.3096282278277E-04
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -1.0024797445509E-04
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   1.8065507321099E-05
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.5962134681093E-05
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.3059002921727E-06
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   7.1462403348747E-04
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -7.1462403348747E-04
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   2.8887821087595E-21
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   3.6441440416932E-05
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   2.4978080879404E-06
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.1607008759890E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.4855266173665E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7671275133162E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   2.8732433088262E-04
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.4878786518836E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.6999987407224E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5348771509017E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7576802230414E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8660125327816E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   7.0509838778592E-05
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483333000001E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397225210879E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032196556083E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6577507711107E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   3.3351231899625E-05
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   9.1370352847847E-05
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   8.9328004185934E-05
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.8713816543416E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.8713780574152E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   4.8562688622733E-10
(PID.TID 0000.0001) %MON ke_max                       =   3.8892019206190E-07
(PID.TID 0000.0001) %MON ke_mean                      =   1.0626214471023E-09
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200058309038E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.06972746319443E+00  9.69036650832775E-03
(PID.TID 0000.0001)      cg2d_init_res =   2.42826495079320E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      29
(PID.TID 0000.0001)      cg2d_last_res =   8.13613211956945E-08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     5
(PID.TID 0000.0001) %MON time_secondsf                =   1.2500000000000E+02
(PID.TID 0000.0001) %MON dynstat_eta_max              =   4.7203739414848E-04
(PID.TID 0000.0001) %MON dynstat_eta_min              =   1.4040196889505E-04
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   1.4997180530060E-04
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   2.5769081759714E-05
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   5.2076791144234E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   1.1299623297142E-03
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -2.2389327147785E-04
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   1.7133197981882E-05
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   3.9939842123719E-05
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   2.0893177568250E-06
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   1.1136901364324E-03
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -1.1136901364324E-03
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   1.6129371167763E-20
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   5.7381594016524E-05
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   3.9980815510527E-06
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   3.3520169399831E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.3260222130467E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7671207260427E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   2.7949501742095E-04
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.4278175220029E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.6999984258938E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5346754375770E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7576714690102E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8659445597226E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   8.4966708235620E-05
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483332916669E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397226005591E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032190135091E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6577676178134E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   3.9939804172131E-05
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.4124529121428E-04
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.3921126705405E-04
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.8315055532617E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.8315009159163E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   7.5718712065161E-10
(PID.TID 0000.0001) %MON ke_max                       =   9.3935578826779E-07
(PID.TID 0000.0001) %MON ke_mean                      =   2.3553026136945E-09
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200077745385E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.07432345566822E+00  1.15786929469171E-02
(PID.TID 0000.0001)      cg2d_init_res =   1.78273956090596E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      29
(PID.TID 0000.0001)      cg2d_last_res =   6.05488410894418E-08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     6
(PID.TID 0000.0001) %MON time_secondsf                =   1.5000000000000E+02
(PID.TID 0000.0001) %MON dynstat_eta_max              =   5.6597519510876E-04
(PID.TID 0000.0001) %MON dynstat_eta_min              =   1.6510316493604E-04
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   1.7996616636072E-04
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   3.1596139931802E-05
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   6.1940541643597E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   1.6091650527078E-03
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -3.7257981317962E-04
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   1.5359109142077E-05
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   5.7415694580544E-05
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   3.0220017971342E-06
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   1.5928122411947E-03
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -1.5928122411947E-03
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =  -9.2816635463031E-21
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   8.3064750520695E-05
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   5.8037851901505E-06
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   4.7792360383161E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.1343400226815E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7671122308054E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   2.7024427822310E-04
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.3571840806014E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.6999981110784E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5344766729672E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7576627855725E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8658774732123E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   9.8308288852467E-05
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483332833337E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397226839809E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032183712197E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6577841489316E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   4.5812181626479E-05
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   2.0114563158848E-04
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.9910153014933E-04
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.7835850056704E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.7835793928959E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   1.0917255914261E-09
(PID.TID 0000.0001) %MON ke_max                       =   1.9158764004814E-06
(PID.TID 0000.0001) %MON ke_mean                      =   4.7346648886079E-09
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200097181730E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.09690302579477E+00  1.32304053449152E-02
(PID.TID 0000.0001)      cg2d_init_res =   1.34048709308211E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      29
(PID.TID 0000.0001)      cg2d_last_res =   4.87111105671509E-08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     7
(PID.TID 0000.0001) %MON time_secondsf                =   1.7500000000000E+02
(PID.TID 0000.0001) %MON dynstat_eta_max              =   6.6022746334881E-04
(PID.TID 0000.0001) %MON dynstat_eta_min              =   1.9641619803090E-04
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   2.0996052742084E-04
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   3.6299288114870E-05
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   7.0398096579144E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.1600700630563E-03
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.4348055639424E-04
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   1.3809229998645E-05
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   7.7803899706727E-05
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   4.0790942764319E-06
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   2.1432614394646E-03
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -2.1432614394646E-03
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =  -9.1995375484570E-22
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.1283140202002E-04
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   7.8712295274343E-06
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   6.4145849828187E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -6.9140320249363E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7671051667046E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   2.5983953729923E-04
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.2781535043172E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.6999977962646E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5342808178232E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7576541722438E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8658111066994E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   1.1060842606662E-04
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483332750005E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397227660677E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032177286720E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6578003135602E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   5.0980131018596E-05
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   2.7000875788204E-04
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   2.6790767993308E-04
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.7285080062341E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.7285014843076E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   1.4846129263336E-09
(PID.TID 0000.0001) %MON ke_max                       =   3.4632560211598E-06
(PID.TID 0000.0001) %MON ke_mean                      =   8.6068114449571E-09
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200116618076E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.13312876435906E+00  1.46370672190868E-02
(PID.TID 0000.0001)      cg2d_init_res =   1.01560145639360E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      29
(PID.TID 0000.0001)      cg2d_last_res =   4.11396951564859E-08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     8
(PID.TID 0000.0001) %MON time_secondsf                =   2.0000000000000E+02
(PID.TID 0000.0001) %MON dynstat_eta_max              =   7.5133705291696E-04
(PID.TID 0000.0001) %MON dynstat_eta_min              =   2.3094750961953E-04
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   2.3995488848097E-04
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   4.0654922725785E-05
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   7.7426348568619E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.7739341866597E-03
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -7.3370095733500E-04
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   1.3028840269051E-05
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.0067686481543E-04
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   5.2368611270209E-06
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   2.7560925205405E-03
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -2.7560925205405E-03
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =  -1.2084041186451E-21
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.4612703960582E-04
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.0159483595555E-05
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   8.2294988233307E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -6.6685825143037E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7670946116807E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   2.4856502407259E-04
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.1930653536693E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   1.6999974814488E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.5340878321085E-02
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   9.7576456218808E-01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   5.8657453278454E-01
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   1.2193787646103E-04
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4483332666673E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.2397228465810E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4032170859827E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.6578160579070E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   5.5461892577938E-05
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   3.4674177333247E-04
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   3.4451156506756E-04
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.6671456285759E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.6671382906394E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   1.9368565887120E-09
(PID.TID 0000.0001) %MON ke_max                       =   5.7216923173781E-06
(PID.TID 0000.0001) %MON ke_mean                      =   1.4356796579031E-08
(PID.TID 0000.0001) %MON ke_vol                       =   9.7200136054422E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %CHECKPOINT         8 ckptA
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:  9.344899654388428E-002
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:   1.82876896858215
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:  1.515800133347511E-002
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  0.120554924011230
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:  7.827700302004814E-002
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:   1.70817804336548
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:  2.878997474908829E-003
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  2.743601799011230E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:  7.538299635052681E-002
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:   1.68069791793823
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:  7.535699754953384E-002
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:   1.68062877655029
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0000.0001)           User time:  7.531398907303810E-002
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:   1.68050837516785
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "DO_STATEVARS_DIAGS  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  9.409934282302856E-004
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  1.211166381835938E-003
(PID.TID 0000.0001)          No. starts:          24
(PID.TID 0000.0001)           No. stops:          24
(PID.TID 0000.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  9.400025010108948E-005
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  2.131462097167969E-004
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:  2.799183130264282E-005
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  6.318092346191406E-005
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  3.799423575401306E-005
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  6.818771362304688E-005
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  4.834000021219254E-003
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  6.379604339599609E-003
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "ICEPLUME_CALC [DO_OCEANIC_PHYS]":
(PID.TID 0000.0001)           User time:  2.490010112524033E-003
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  3.094196319580078E-003
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  1.614900305867195E-002
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  1.616239547729492E-002
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "UPDATE_R_STAR       [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  3.800168633460999E-004
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  4.310607910156250E-004
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "UPDATE_CG2D         [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  1.650080084800720E-004
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  1.897811889648438E-004
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  2.865985035896301E-003
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  3.236770629882812E-003
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  3.120079636573792E-004
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  3.638267517089844E-004
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  3.940165042877197E-004
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  4.441738128662109E-004
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "CALC_R_STAR         [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  2.050101757049561E-004
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  2.038478851318359E-004
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  6.060078740119934E-004
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  6.399154663085938E-004
(PID.TID 0000.0001)          No. starts:          16
(PID.TID 0000.0001)           No. stops:          16
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  9.752996265888214E-003
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  1.083183288574219E-002
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  5.400925874710083E-005
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  6.389617919921875E-005
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  5.011007189750671E-003
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  5.045890808105469E-003
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  3.171399235725403E-002
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:   1.44232535362244
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  8.189901709556580E-004
(PID.TID 0000.0001)         System time:  0.000000000000000E+000
(PID.TID 0000.0001)     Wall clock time:  0.191416978836060
(PID.TID 0000.0001)          No. starts:           8
(PID.TID 0000.0001)           No. stops:           8
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =          12004
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =          12004
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
